.. _требования-к-проекту:

##################
Требования к проекту
##################

.. _требования-к-репозиторию-проекта:

Репозиторий проекта
===================

1. Комментарии к коммитам должны отражать суть изменений (хорошую конвенцию именования коммитов
   можно найти `здесь <https://www.conventionalcommits.org/en/v1.0.0/>`_.)

2. История разработки и вклад каждого участника оценивается по Github. Можно использовать другие VCS
   (системы контроля версий), но обязательно нужно обеспечить доступ для всех участников жюри к открытому репозиторию.

3. Работа тестировщиков должна производится через issues выбранной VCS, по ним же будет оцениваться вклад.

4. При оценивании проектов члены жюри могут открывать issues. На них нужно реагировать и реализовывать,
   работа с ними оценивается. По всем открытым issues должна быть проведена работа до следующего этапа.
   После того как вы выполнили issue, *крайне желательно* открыть пулл реквест
   (и по возможности добавить в ревьюеры ишьюера), чтобы ишьюер мог оценить проделанную работу.
   Либо, в самом простом случае, вы должны ответить ишьюеру в комментариях к issue с номером коммита,
   который решает проблему.

5. Созданные ресурсы дизайнеры, музыканты, и т. п. загружают в репозиторий, их активность оценивается,
   соответственно, по коммитам.

6. Сборки проектов загружаются во вкладку Releases в сроки, устанавливаемые коллегией жюри.
   Проекты, которым необходим деплой, прикрепляют к релизу ссылку на него. Также к релизу должен быть
   прикреплен коммит, на момент которого осуществлялась сборка/деплой.

7. При использовании сторонних материалов в репозитории должен быть размещён файл license.md,
   в котором перечислены ссылки на все используемые материалы.

8. В репозитории должен быть файл README.md, содержащий:
   1. Описание идеи.
   2. Тип проекта (приложение/сайт/чат-бот и т.д.)
   3. Цель проекта, задачи для достижения цели
   4. Структурные части проекта и соответствующие технологии. **Не нужно указывать IDE, VCS, графические редакторы.**
   5. Способ запуска, подсказки, читы, etc. для жюри.

.. _требования-к-презентации:

Презентация и выступление
=========================

Выступает 1 человек от команды на ваш выбор.

Длительность выступления – **4-6 минут**.
*Именно столько времени дается бакалаврам на защите диплома.
За слишком долгие или слишком быстрые выступления будем штрафовать.*

Содержание презентации
--------------

Общие требования
~~~~~~~~~~~~~~~~

* Титульный лист с названием проекта
* Слайд с составом команды и фотографиями участников
* Цель проекта, задачи для достижения цели
* Описание идеи.
  *На 1-м этапе обязательно должна прозвучать аргументация в пользу выбора этой идеи и аннотация проекта*
* Тип проекта (приложение/сайт/чат-бот и т.д.)
* Референсы, источники вдохновения для проекта
* Структурные части проекта и соответствующие технологии.
  **Не нужно указывать IDE, VCS, графические редакторы.**
* Ссылка на открытый репозиторий

Требования 2-4 этапов
~~~~~~~~~~~~~~~~~~~~~

* Распределение ролей среди участников команды (Матрица распределения ответственности)
* Результаты на момент выступления (что конкретно было сделано), сравнение с предыдущей версией
  (было/стало). Количество issues, которые удалось решить.
* Личный вклад каждого участника
* Этапы и сроки реализации проекта -- Диаграмма Ганта выполнения проекта. *Диаграмма Ганта необходима только для 2-го и 4-го этапов защиты (нулевая версия и защита)*
* Графики коммитов из GitHub.
* Скриншоты основного функционала (не более 5 слайдов)
* Для каждого участника указать, что конкретно он сделал и в каком объеме.
* Публичная сборка/ссылка для тестирования
* Стек технологий должен соответствовать частям разрабатываемой системы.
  *Пример стека: "БД: Postgresql, Сервер: .NET Core, Клиентская часть: React"
  Еще пример стека: "Игра на Unity". Если для успешного выполнения проекта нужна одна технология, то это нормально.*
  :ref:`stack_ideas`

Оформление
----------

* Формат презентации на сдачу -- PDF. Если нужно показать гифки -- можно .pptx, но учтите,
  что в этом формате презентация может поехать на другой версии PowerPoint.
* Допускаются как формат 4х3, так и 16х9.
* На слайдах не должно быть больших объёмов текста.
* Презентация должна быть хорошо читаемой и визуально воспринимаемой.
  Обратите внимание на контрастность цветов, проектор может высветлять некоторые оттенки.
* Рекомендуется использовать шрифты без засечек, размер шрифта должен быть достаточно большим (не менее 18 пт).
* В презентациях стоит кратко и чётко напомнить, о чём проект, и кто его делает, но не стоит говорить фразы подобные "как мы уже говорили \[n месяцев назад\]..." *Для команд их проекты непрерывны, т.к. они ими регулярно занимаются, а для жюри, скорее, дискретны, сложно переключаться между таким большим количеством проектов, поэтому краткое напоминание сильно облегчит этот момент.*
* Все слайды, кроме титульного, необходимо нумеровать. **Обязательно.**
* Когда рассказываете о том, кто из членов команды какую часть работы выполнил, будьте готовы к тому, что любого члена команды могут попросить рассказать конкретно о том, что он делал и как именно.
* Команда должна присутствовать до конца собрания (не важно, очное оно или в Teams). **За самовольный уход будут наложены штрафные санкции**.

.. _требования-к-билду:

Билд проекта
============

1. Билд проекта в случае игр и десктопных приложений должен быть представлен одним архивом, в случае
   Android-приложений -- одним .apk файлом.

2. Название архива должно соответствовать названию проекта, т. е. названия *«build»*, *«pd»*, *«app\_release.apk»*
   и т.д. недопустимы.

3. В корневой директории архива может находиться установочная программа проекта,
   полностью отражающая название проекта, либо директория со всеми файлами проекта,
   аналогично отражающая название проекта.

4. Для публикации билда необходимо использовать раздел Releases репозитория проекта на GitHub.

.. _требования-к-игровым-проектам:

Функционал игровых проектов
===========================

1. Игровые проекты должны предоставить для тестирования возможность оценить качество игры без особых трудозатрат
   для проверяющего. Рассчитывайте, что на тестирование проверяющий потратит не более 10-15 минут.
   За это время нужно показать работу основных механик игры.

2. В игре должны быть предусмотрены чит-коды/режим бога/etc. для облегчения жизни проверяющим.

.. _требования-к-внешним-ресурсам:

Использование внешних ресурсов
==============================

1. В официальных материалах проекта допускается упоминание только ресурсов **с открытой лицензией** или **купленной лицензией разработчика**.

2. При использовании сторонних материалов в репозитории должен быть размещён файл LICENSE.md, в котором перечислены **ссылки на все используемые материалы**.

3. Крупные ассеты (фреймворки, библиотеки, СУБД, UI-киты) нужно выносить на слайды со стеком технологий. Например,
   *«Язык C\#, фреймворк ASP.Net, СУБД MySQL, Bootstrap, тема Phoenix»*. Большинство таких инструментов
   имеют подходящие лицензии, но на всякий случай проверяйте. Наиболее подходящая для проектов на ПД -- **лицензия MIT**.

   В случае с играми готовые геймплейные системы (диалоги, инвентарь, жанровые фреймворки) тоже относятся к стеку технологий.
   Например, для коллекционно-карточной игры на Unity CCG Game Kit считается крупным ассетом.

4. Более мелкие ассеты (наборы иконок, изображений, моделей, звуков) нужно упомянуть в презентации в виде
   сносок на соответствующих слайдах. Если список мелких ассетов очень длинный (10 разных наборов картинок),
   то можно сослаться на файл LICENSE.md в репозитории.

5. Для использования ассетов нужна лицензия: если ассет бесплатный (MIT), то все ок.
   Если ассет бесплатный, но с лицензией, которая требует указания автора ассета,
   то обязательно разместите нужную информацию в сборке проекта. Если ассет требует покупки, его надо купить или,
   при возможности, обратиться к кому-то, кто уже купил и готов предоставить вашей команде нужные материалы.

.. _требования-к-совместимости:

Совместимость
=============

Общие положения
---------------

1. Экраны бывают разных размеров и с разными разрешениями, тут стоит воспользоваться статистикой с какого-либо крупного сервиса в интернете.
   Например, если есть речь про desktop, то ПО должно открываться адекватно как на ноуте с 768p, так и на компе с 1080p,
   а, по-хорошему, ещё и на маке с 4K. Если же речь про мобилки, то при размере 4.5"-6" с разрешением HD/FullHD/QHD
   должно быть ок, т.е. в рамках одной категории не сходить с ума при отходе от единственного
   протестированного разрешения/размера.

Мобильные игры и приложения
---------------------------

1. Нужно тестировать приложения на различных устройствах. Здесь могут быть полезны эмуляторы, виртуальные машины, утилиты разработчика.

2. Для Android сейчас разумно поддерживать версии 7.1.1+, при этом отвечать придётся за работу на любой версии допускаемой приложением (см. AndroidManifest). Как и в актуальный требованиях Google Play, необходимо поддерживать 32 и 64-битную архитектуру ARM, в частности, следующие ABI: armeabi-v7a, arm64-v8a. Плюсом будет поддержка x86/x86\_64. *Написали, что минимум 4.1, значит, будьте готовы к проверке на такой старой версии. Не можете поддерживать старую версию, запретите запуск на ней.*

3. Для iOS разумно поддерживать текущую мажорную версию плюс одну предыдущую, т.е. сейчас iOS/iPad OS 17+.

Десктопные игры и приложения
----------------------------

1. Не забывайте, что 64-битная Windows 11 – далеко не единственная используемая версия ОС.
   Тестируйте на разных версиях, чтобы избежать неожиданных проблем на чужом девайсе.

2. Для десктопных приложений нужно указать требуемые зависимости для программы,
   включая требуемую версию (например .NET Framework / .NET Core)
